# main.py
import logging
from telegram import InlineKeyboardMarkup, InlineKeyboardButton, ReplyKeyboardMarkup
from telegram.ext import (Updater, CommandHandler, CallbackQueryHandler,
                          ConversationHandler, MessageHandler, Filters)
from keyboards import main_menu, back_button
from config import BOT_TOKEN, ADMIN_ID, WAIT_IMAGE, WAIT_TITLE, WAIT_CONTENT
from handlers.docs import show_docs_menu, show_documents_list, send_document
from handlers.news import (show_news_menu, show_news_detail, confirm_delete, delete_news,
                           add_news, handle_image, save_news, finish_news, cancel)

# –í–∫–ª—é—á–∞–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO)
logger = logging.getLogger(__name__)


def get_persistent_keyboard():
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø–æ—Å—Ç–æ—è–Ω–Ω—É—é Reply-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–æ–π –ì–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é"""
    return ReplyKeyboardMarkup([['üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é']], resize_keyboard=True, persistent=True)


def start(update, context):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start"""
    # –°–±—Ä–∞—Å—ã–≤–∞–µ–º –ª—é–±—ã–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –¥–∏–∞–ª–æ–≥–∞
    if 'conversation' in context.user_data:
        del context.user_data['conversation']

    # –û—á–∏—â–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
    context.user_data.pop('news_image', None)
    context.user_data.pop('news_title', None)

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
    update.message.reply_text(
        "–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é! –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
        reply_markup=main_menu()
    )


def button_click(update, context):
    query = update.callback_query
    data = query.data

    if data == "start":
        start(update, context)
    elif data == "docs":
        show_docs_menu(update, context)
    elif data == "docs_application":
        show_documents_list(update, context, "application")
    elif data == "docs_template":
        show_documents_list(update, context, "template")
    elif data.startswith("file_"):
        file_path = data.replace("file_", "")
        send_document(update, context, file_path)
    elif data == "contacts":
        query.edit_message_text(
            "üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏—è:\n\n"
            "üì± –¢–µ–ª–µ—Ñ–æ–Ω: +375 (XX) XXX-XX-XX\n"
            "‚úâÔ∏è Email: info@prof.by",
            reply_markup=back_button()
        )
    elif data == "news":
        show_news_menu(update, context)
    elif data == "add_news":
        add_news(update, context)
    elif data.startswith("news_"):
        news_id = data.split('_')[1]
        show_news_detail(update, context, news_id)
    elif data.startswith("delete_"):
        delete_news(update, context)
    elif data.startswith("confirm_delete_"):
        confirm_delete(update, context)
    elif data == "back_to_news":
        show_news_menu(update, context)
    elif data == "back_to_main":
        query.edit_message_text(
            "üîπ –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:",
            reply_markup=main_menu()
        )


def main():
    updater = Updater(BOT_TOKEN, use_context=True)
    dp = updater.dispatcher

    # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥
    dp.add_handler(CommandHandler("start", start))
    dp.add_handler(MessageHandler(Filters.regex('^üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é$'), start))
    dp.add_handler(CallbackQueryHandler(button_click))

    # --- –ê–î–ú–ò–ù-–ü–ê–ù–ï–õ–¨ ---
    dp.add_handler(ConversationHandler(
        entry_points=[
            CommandHandler('add_news', add_news),  # –î–ª—è –∫–æ–º–∞–Ω–¥—ã /add_news
            CallbackQueryHandler(add_news, pattern='^add_news$')  # –î–ª—è –∫–Ω–æ–ø–∫–∏
        ],
        states={
            WAIT_IMAGE: [  # –û–∂–∏–¥–∞–µ–º —Ñ–æ—Ç–æ –∏–ª–∏ –∫–æ–º–∞–Ω–¥—É /skip
                MessageHandler(Filters.photo, handle_image),
                CommandHandler('skip', handle_image)
            ],
            WAIT_TITLE: [  # –û–∂–∏–¥–∞–µ–º —Ç–µ–∫—Å—Ç –∑–∞–≥–æ–ª–æ–≤–∫–∞
                MessageHandler(Filters.text & ~Filters.command, save_news)
            ],
            WAIT_CONTENT: [  # –û–∂–∏–¥–∞–µ–º —Ç–µ–∫—Å—Ç –Ω–æ–≤–æ—Å—Ç–∏
                MessageHandler(Filters.text & ~Filters.command, finish_news)
            ],
        },
        fallbacks=[
            CommandHandler('cancel', cancel),
            MessageHandler(Filters.regex('^üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é$'), start)
        ],  # –¢–æ—á–∫–∏ –≤—ã—Ö–æ–¥–∞ –∏–∑ –¥–∏–∞–ª–æ–≥–∞
    ))

    updater.start_polling()
    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö!")
    updater.idle()


if __name__ == "__main__":
    main()